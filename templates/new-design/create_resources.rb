#!/usr/bin/ruby

# Simple templating engine to create resources.h header file from html and images
TEMPLATING_RULES = [
    ["\t", ""],
	["\n", ""],
	["\"", "'"],
	["{{", "\" + "],
	["}}", " + \""]
]
OUTPUT = File.open("resources.h", "w")

def init
    OUTPUT.puts "/*"
    OUTPUT.puts " * Generated code, do not edit this file."
    OUTPUT.puts "*/"
end

def process_html_form
    f = File.open("configuration.min.html", "r")
    OUTPUT.puts ""
    OUTPUT.puts "/* Retuns HTML configuration form */"
    OUTPUT.puts "String htmlConfigurationForm(String ssid, String password, String identifier, int sleepInterval, String otaUrl, int otaUpdateInterval, String thingspeakApiKey) {"
    OUTPUT.write "    return "
    index = 0
    number_of_lines = f.count
    f.rewind
    f.each_line do |line|
	    TEMPLATING_RULES.each { |rule|
		    line.gsub! rule[0], rule[1]
	    }  
        if index==0
            OUTPUT.puts '"' + line + '"'
        elsif index==number_of_lines-1
            OUTPUT.puts '        "' + line + '";'
        elsif line==""
            
        else
            OUTPUT.puts '        "' + line + '"'
        end
        index+=1
    end
    OUTPUT.puts ";}"
    f.close
end

def close
    OUTPUT.close
end

init()
process_html_form()
close()
